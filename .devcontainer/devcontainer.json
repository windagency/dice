{
  "name": "DICE Development Environment",
  "dockerComposeFile": [
    "../workspace/backend/docker-compose.yml"
  ],
  "service": "backend",
  "workspaceFolder": "/app",
  "shutdownAction": "stopCompose",
  "overrideCommand": true,
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  },
  "initializeCommand": [
    "bash",
    "-c",
    "infrastructure/scripts/setup-devcontainer.sh && echo 'DevContainer initialization complete'"
  ],
  "postCreateCommand": [
    "bash",
    "-c",
    "pnpm install --frozen-lockfile"
  ],
  "forwardPorts": [
    3001, // Backend API
    3000, // PWA Frontend  
    6006, // Storybook Component Library
    5432, // PostgreSQL
    6379, // Redis
    7233, // Temporal gRPC
    8080, // Traefik Dashboard
    8088, // Temporal Web UI
    4566, // LocalStack AWS Services
    9200, // Elasticsearch API
    5601, // Kibana Dashboard
    2020 // Fluent Bit Metrics
  ],
  "portsAttributes": {
    "3001": {
      "label": "Backend API",
      "onAutoForward": "notify",
      "elevateIfNeeded": false
    },
    "3000": {
      "label": "PWA Frontend",
      "onAutoForward": "openBrowser",
      "elevateIfNeeded": false
    },
    "6006": {
      "label": "Storybook Component Library",
      "onAutoForward": "openPreview",
      "elevateIfNeeded": false
    },
    "5432": {
      "label": "PostgreSQL Database",
      "onAutoForward": "ignore"
    },
    "6379": {
      "label": "Redis Cache",
      "onAutoForward": "ignore"
    },
    "7233": {
      "label": "Temporal gRPC Server",
      "onAutoForward": "ignore"
    },
    "8080": {
      "label": "Traefik Dashboard",
      "onAutoForward": "notify",
      "elevateIfNeeded": false
    },
    "8088": {
      "label": "Temporal Web UI",
      "onAutoForward": "openPreview",
      "elevateIfNeeded": false
    },
    "4566": {
      "label": "LocalStack AWS Services",
      "onAutoForward": "notify",
      "elevateIfNeeded": false
    },
    "9200": {
      "label": "Elasticsearch API",
      "onAutoForward": "notify",
      "elevateIfNeeded": false
    },
    "5601": {
      "label": "Kibana Dashboard",
      "onAutoForward": "openPreview",
      "elevateIfNeeded": false
    },
    "2020": {
      "label": "Fluent Bit Metrics",
      "onAutoForward": "ignore"
    }
  },
  "customizations": {
    "vscode": {
      "extensions": [
        // TypeScript and JavaScript
        "ms-vscode.vscode-typescript-next",
        "ms-vscode.vscode-eslint",
        "esbenp.prettier-vscode",
        // Frameworks and Libraries
        "bradlc.vscode-tailwindcss",
        "astro-build.astro-vscode",
        "ms-vscode.vscode-json",
        // DevOps and Infrastructure
        "ms-azuretools.vscode-docker",
        "redhat.vscode-yaml",
        // Development Tools
        "ms-vscode.vscode-thunder-client",
        "streetsidesoftware.code-spell-checker",
        // Temporal
        "temporal-technologies.temporalio"
      ],
      "settings": {
        // TypeScript Configuration
        "typescript.preferences.importModuleSpecifier": "relative",
        "typescript.suggest.autoImports": true,
        "typescript.updateImportsOnFileMove.enabled": "always",
        // Editor Configuration
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": "explicit",
          "source.organizeImports": "explicit"
        },
        "editor.tabSize": 2,
        "editor.insertSpaces": true,
        // File Configuration
        "files.exclude": {
          "**/node_modules": true,
          "**/dist": true,
          "**/.astro": true
        },
        // Terminal Configuration
        "terminal.integrated.defaultProfile.linux": "bash",
        // Docker Integration
        "docker.defaultRegistryPath": "localhost:5000"
      }
    }
  },
  "remoteEnv": {
    "NODE_ENV": "development",
    "ASTRO_TELEMETRY_DISABLED": "1",
    "COMPOSE_PROFILES": "devcontainer",
    "FLUENT_ELASTICSEARCH_HOST": "localhost",
    "FLUENT_ELASTICSEARCH_PORT": "9200",
    "DICE_LOGGING_ENABLED": "true"
  },
  "postStartCommand": [
    "bash",
    "-c",
    "echo 'ðŸ”§ DevContainer ready - ELK logging available via: ./infrastructure/scripts/logging-setup.sh start'"
  ]
}