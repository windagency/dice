# DICE Fluent Bit Parsers Configuration
# Defines parsing rules for different log formats from DICE services

# ============================================================================
# DICE BACKEND API PARSERS - NestJS + Winston JSON Logs
# ============================================================================

[PARSER]
    Name                dice_json
    Format              json
    Time_Key            timestamp
    Time_Format         %Y-%m-%dT%H:%M:%S.%3NZ
    Time_Keep           On
    Decode_Field_As     escaped_utf8 log do_next
    Decode_Field_As     json log

[PARSER]  
    Name                dice_backend_winston
    Format              json
    Time_Key            timestamp
    Time_Format         %Y-%m-%dT%H:%M:%S.%3NZ
    Time_Keep           On
    Decode_Field_As     json metadata

# ============================================================================
# DOCKER CONTAINER LOG PARSERS
# ============================================================================

[PARSER]
    Name                docker
    Format              json
    Time_Key            time
    Time_Format         %Y-%m-%dT%H:%M:%S.%L
    Time_Keep           On
    Decode_Field_As     escaped_utf8 log do_next
    Decode_Field_As     json log do_next

[PARSER]
    Name                containerd
    Format              regex
    Regex               ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
    Time_Key            time
    Time_Format         %Y-%m-%dT%H:%M:%S.%L%z
    Time_Keep           On
    Decode_Field_As     escaped_utf8 log do_next
    Decode_Field_As     json log

# ============================================================================
# DATABASE LOG PARSERS
# ============================================================================

[PARSER]
    Name                postgres
    Format              regex
    Regex               ^(?<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3} [A-Z]{3}) \[(?<pid>\d+)\] (?<level>[A-Z]+):?\s*(?<message>.*)$
    Time_Key            timestamp
    Time_Format         %Y-%m-%d %H:%M:%S.%3N %Z
    Time_Keep           On

[PARSER]
    Name                postgres_slow_query
    Format              regex
    Regex               ^(?<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3} [A-Z]{3}) \[(?<pid>\d+)\] LOG:\s*duration: (?<duration>\d+\.\d+) ms\s+statement: (?<query>.*)$
    Time_Key            timestamp
    Time_Format         %Y-%m-%d %H:%M:%S.%3N %Z
    Time_Keep           On

[PARSER]
    Name                redis
    Format              regex
    Regex               ^(?<pid>\d+):(?<role>[MCS]) (?<timestamp>\d{2} [A-Z][a-z]{2} \d{4} \d{2}:\d{2}:\d{2}.\d{3}) (?<level>[*#-]) (?<message>.*)$
    Time_Key            timestamp
    Time_Format         %d %b %Y %H:%M:%S.%3N
    Time_Keep           On

# ============================================================================
# TEMPORAL WORKFLOW ENGINE PARSERS
# ============================================================================

[PARSER]
    Name                temporal
    Format              json
    Time_Key            ts
    Time_Format         %Y-%m-%dT%H:%M:%S.%3NZ
    Time_Keep           On
    Decode_Field_As     json meta
    Decode_Field_As     json wf

[PARSER]
    Name                temporal_worker
    Format              regex
    Regex               ^(?<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z) (?<level>[A-Z]+) (?<logger>[^\s]+) (?<message>.*)$
    Time_Key            timestamp
    Time_Format         %Y-%m-%dT%H:%M:%S.%3NZ
    Time_Keep           On

# ============================================================================
# TRAEFIK REVERSE PROXY PARSERS
# ============================================================================

[PARSER]
    Name                traefik_access
    Format              regex
    Regex               ^(?<client_ip>[^\s]+) - (?<client_username>[^\s]+) \[(?<timestamp>[^\]]+)\] "(?<method>[A-Z]+) (?<request_uri>[^\s]*) (?<http_version>[^"]*)" (?<status_code>\d+) (?<response_size>\d+) "(?<http_referer>[^"]*)" "(?<http_user_agent>[^"]*)" (?<request_duration>\d+)$
    Time_Key            timestamp
    Time_Format         %d/%b/%Y:%H:%M:%S %z
    Time_Keep           On

[PARSER]
    Name                traefik_error
    Format              regex
    Regex               ^(?<timestamp>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) (?<level>[A-Z]+) (?<message>.*)$
    Time_Key            timestamp
    Time_Format         %Y/%m/%d %H:%M:%S
    Time_Keep           On

# ============================================================================
# PWA FRONTEND / BROWSER LOG PARSERS
# ============================================================================

[PARSER]
    Name                browser_json
    Format              json
    Time_Key            timestamp
    Time_Format         %Y-%m-%dT%H:%M:%S.%3NZ
    Time_Keep           On
    Decode_Field_As     json metadata
    Decode_Field_As     json error

[PARSER]
    Name                astro_dev
    Format              regex
    Regex               ^\[(?<timestamp>\d{2}:\d{2}:\d{2})\] (?<level>[A-Z]+) (?<message>.*)$
    Time_Key            timestamp
    Time_Format         %H:%M:%S
    Time_Keep           On

# ============================================================================
# SECURITY & AUDIT LOG PARSERS
# ============================================================================

[PARSER]
    Name                security_event
    Format              json
    Time_Key            timestamp
    Time_Format         %Y-%m-%dT%H:%M:%S.%3NZ
    Time_Keep           On
    Decode_Field_As     json securityEvent
    Decode_Field_As     json request

[PARSER]
    Name                audit_log
    Format              json
    Time_Key            timestamp
    Time_Format         %Y-%m-%dT%H:%M:%S.%3NZ
    Time_Keep           On
    Decode_Field_As     json auditData
    Decode_Field_As     json userInfo

# ============================================================================
# SYSTEM & INFRASTRUCTURE PARSERS
# ============================================================================

[PARSER]
    Name                systemd
    Format              regex
    Regex               ^(?<timestamp>[A-Z][a-z]{2} \d{2} \d{2}:\d{2}:\d{2}) (?<hostname>[^\s]+) (?<service>[^\[]+)\[(?<pid>\d+)\]: (?<message>.*)$
    Time_Key            timestamp
    Time_Format         %b %d %H:%M:%S
    Time_Keep           On

[PARSER]
    Name                nginx_access
    Format              regex
    Regex               ^(?<remote>[^ ]*) (?<host>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
    Time_Key            time
    Time_Format         %d/%b/%Y:%H:%M:%S %z
    Time_Keep           On

# ============================================================================
# MULTILINE PARSERS - For Stack Traces & Complex Logs
# ============================================================================

[MULTILINE_PARSER]
    name                multiline-regex-test
    type                regex
    flush_timeout       1000
    #
    # Regex rules for multiline parsing
    # ---------------------------------
    #
    # configuration hints:
    #
    #  - first state always has the name: start_state
    #  - every field in the rule must be inside double quotes
    #
    # rules |   state   | regex pattern                  | next state
    # ------|-----------|--------------------------------------------
    rule    "start_state" "/^(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3})/"   "cont"
    rule    "cont"        "/^(?!(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}))/" "cont"

[MULTILINE_PARSER]
    name                java_multiline
    type                regex
    flush_timeout       1000
    rule                "start_state" "/^(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3})/" "cont"
    rule                "cont"        "/^(?!(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}))/" "cont"

[MULTILINE_PARSER]
    name                nodejs_multiline
    type                regex
    flush_timeout       1000
    rule                "start_state" "/^Error:/" "cont"
    rule                "cont"        "/^\s+at /" "cont"

# ============================================================================
# CUSTOM FIELD PARSERS - For Complex Data Extraction
# ============================================================================

[PARSER]
    Name                extract_correlation_id
    Format              regex
    Regex               .*correlationId[\"']\s*:\s*[\"'](?<correlation_id>[^\"']+)[\"'].*

[PARSER]
    Name                extract_user_id
    Format              regex
    Regex               .*userId[\"']\s*:\s*[\"'](?<user_id>[^\"']+)[\"'].*

[PARSER]
    Name                extract_session_id
    Format              regex
    Regex               .*sessionId[\"']\s*:\s*[\"'](?<session_id>[^\"']+)[\"'].*

[PARSER]
    Name                extract_request_duration
    Format              regex
    Regex               .*duration[\"']\s*:\s*(?<duration>\d+(?:\.\d+)?).*

[PARSER]
    Name                extract_status_code
    Format              regex
    Regex               .*statusCode[\"']\s*:\s*(?<status_code>\d{3}).* 