# Docker Compose configuration for DevContainer
# This file provides the necessary environment variables for devcontainer startup

services:
  postgres:
    image: postgres:17-bullseye
    container_name: dice_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dice_db}
      POSTGRES_USER: ${POSTGRES_USER:-dice_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dice_dev_password_default}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dice_network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dice_user} -d ${POSTGRES_DB:-dice_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-bullseye
    container_name: dice_redis
    networks:
      - dice_network
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  backend:
    build:
      context: ./workspace/backend
      dockerfile: Dockerfile
    container_name: dice_backend
    command: sh -c "pnpm install && pnpm run start:dev"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL:-postgresql://dice_user:dice_dev_password_default@postgres:5432/dice_db}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - JWT_SECRET=${JWT_SECRET:-dice_jwt_secret_development_default}
      - PORT=3001
    volumes:
      - ./workspace/backend:/app
      - backend_node_modules:/app/node_modules
    networks:
      - dice_network
    ports:
      - "3001:3001"
      - "9229:9229"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  pwa:
    build:
      context: ./workspace/pwa
      dockerfile: Dockerfile
    container_name: dice_pwa
    command: sh -c "pnpm install && pnpm run dev -- --host 0.0.0.0"
    environment:
      - NODE_ENV=development
      - ASTRO_TELEMETRY_DISABLED=1
    volumes:
      - ./workspace/pwa:/app
      - pwa_node_modules:/app/node_modules
    networks:
      - dice_network
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

  localstack:
    image: localstack/localstack:4.0
    container_name: dice_localstack
    environment:
      - SERVICES=s3,dynamodb,kinesis
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LOCALSTACK_HOST=localhost
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - dice_network
    ports:
      - "4566:4566"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  traefik:
    image: traefik:v3.0
    container_name: dice_traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - dice_network
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"

volumes:
  postgres_data:
  backend_node_modules:
  pwa_node_modules:

networks:
  dice_network:
    driver: bridge 