# PWA Frontend Development Environment  
# This compose file provides all services needed for PWA development
# Run with: docker compose up -d

services:
  # PWA Frontend Service
  pwa:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pwa_dev
    environment:
      - NODE_ENV=development
      - ASTRO_TELEMETRY_DISABLED=1
      - PORT=3000
      - VITE_API_URL=http://localhost:3001  # Point to backend for API calls
      - PNPM_HOME=/usr/local/bin
      - PATH=/usr/local/bin:$PATH
    volumes:
      - .:/app
      - pwa_node_modules:/app/node_modules  # Named volume for node_modules
    ports:
      - "3000:3000"
    command: sh -c "cd /app && npm install && npm run dev -- --host 0.0.0.0"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s # Increased start_period for dependency installation
    networks:
      - pwa_network
    restart: unless-stopped

  # Storybook Development Service (Separate container)
  storybook:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pwa_storybook_dev
    environment:
      - NODE_ENV=development
      - ASTRO_TELEMETRY_DISABLED=1
      - PORT=6006
      - PNPM_HOME=/usr/local/bin
      - PATH=/usr/local/bin:$PATH
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=1000
      - WATCHPACK_POLLING=true
    volumes:
      - .:/app
      - pwa_node_modules:/app/node_modules
    ports:
      - "6006:6006"
    command: sh -c "cd /app && npm install && npm run storybook -- --host 0.0.0.0"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6006/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s
    networks:
      - pwa_network
    restart: unless-stopped

  # Mock Backend (Optional - for PWA-only development)
  mock-backend:
    image: node:22-bullseye
    container_name: pwa_mock_backend
    working_dir: /app
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
    ports:
      - "3001:3001"
    command: sh -c "npm install -g json-server && json-server --watch mock-data/db.json --port 3001 --host 0.0.0.0"
    profiles:
      - mock  # Enable with: docker compose --profile mock up -d
    networks:
      - pwa_network

volumes:
  pwa_node_modules:
    driver: local
  pwa_pnpm_store:
    driver: local

networks:
  pwa_network:
    driver: bridge
    name: pwa_network 